{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Simple example Lambda-based website.",
    "Resources": {
        "DataBucket" : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "AccessControl" : "Private",
                "CorsConfiguration":{
                    "CorsRules": [{
                        "AllowedMethods" : [ "GET" ],
                        "AllowedOrigins" : [ "*" ]
                    }]
                }
            }
        },
        "LambdaPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "",
                "Path": "/",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudwatch:*",
                                "logs:*"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "s3:*"
                            ],
                            "Resource": [
                                { "Fn::Sub" : "arn:${AWS::Partition}:s3:::${DataBucket}" },
                                { "Fn::Sub" : "arn:${AWS::Partition}:s3:::${DataBucket}/*" }
                            ],
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "cloudformation:Describe*",
                                "cloudformation:Get*",
                                "cloudformation:List*"
                            ],
                            "Resource": [
                                {"Ref":"AWS::StackId"},
                                { "Fn::Sub" : "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"}
                            ],
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "LambdaRole":{
            "Type":"AWS::IAM::Role",
            "Properties":{
                "AssumeRolePolicyDocument":{
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path":"/",
                "ManagedPolicyArns":[{"Ref":"LambdaPolicy"}]
            }
        },
        "ExampleFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Handler": "lambda_function.lambda_handler",
                "Role": {"Fn::GetAtt":["LambdaRole","Arn"]},
                "Runtime": "python3.6",
                "CodeUri": "./build/",
                "Timeout": 300,
                "Environment":{
                    "Variables":{
                        "STACK_NAME":{"Ref":"AWS::StackName"},
                        "DATA_BUCKET":{"Ref":"DataBucket"}
                    }
                },
                "Events": {
                    "ProxylessGet": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/",
                            "Method": "GET"
                        }
                    },
                    "ProxylessPost": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/",
                            "Method": "POST"
                        }
                    },
                    "ProxyGet": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/{proxy+}",
                            "Method": "GET"
                        }
                    },
                    "ProxyPost": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/{proxy+}",
                            "Method": "POST"
                        }
                    }
                }
            }
        }
    }
}
